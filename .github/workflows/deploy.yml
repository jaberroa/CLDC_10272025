name: Deploy Laravel to AWS Elastic Beanstalk

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, dom, fileinfo, mysql, zip
        coverage: none
        
    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ~/.composer/cache
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
          
    - name: Install Composer dependencies
      run: composer install --no-dev --optimize-autoloader --no-interaction
      
    - name: Create deployment package
      run: |
        echo "🚀 Creando paquete de despliegue optimizado..."
        echo "📋 Información del deployment:"
        echo "  - SHA: ${{ github.sha }}"
        echo "  - Run Number: ${{ github.run_number }}"
        echo "  - Branch: ${{ github.ref_name }}"
        echo "  - Version Label: ${{ github.sha }}-${{ github.run_number }}-${{ github.ref_name }}"
        
        mkdir -p deploy-package
        
        # Copiar archivos necesarios para Laravel
        echo "📦 Copiando archivos de Laravel..."
        cp -r app bootstrap config database public resources routes storage vendor composer.json composer.lock artisan Dockerfile php.ini deploy-package/
        
        # Validar archivos críticos
        echo "🔍 Validando archivos críticos..."
        if [ ! -f "deploy-package/artisan" ]; then
          echo "❌ Error: artisan no encontrado"
          exit 1
        fi
        if [ ! -f "deploy-package/composer.json" ]; then
          echo "❌ Error: composer.json no encontrado"
          exit 1
        fi
        if [ ! -f "deploy-package/Dockerfile" ]; then
          echo "❌ Error: Dockerfile no encontrado"
          exit 1
        fi
        if [ ! -f "deploy-package/php.ini" ]; then
          echo "❌ Error: php.ini no encontrado"
          exit 1
        fi
        echo "✅ Archivos críticos validados correctamente"
        
        # Comprimir el paquete
        echo "📦 Comprimiendo paquete de despliegue..."
        cd deploy-package && zip -r ../deployment-package.zip . && cd ..
        
        echo "✅ Paquete de despliegue creado exitosamente!"
        echo "📊 Contenido del paquete:"
        unzip -l deployment-package.zip | head -20
        
    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: cldci-staging
        environment_name: cldci-staging-env-new
        region: us-east-1
        version_label: ${{ github.sha }}-${{ github.run_number }}-${{ github.ref_name }}
        deployment_package: deployment-package.zip
        use_existing_version_if_available: true
        wait_for_environment_recovery: 300
        
    - name: Deployment Success Notification
      if: success()
      run: |
        echo "✅ Deployment completed successfully!"
        echo "🚀 Application deployed to: [URL will be generated after deployment]"
        
    - name: Deployment Failure Notification
      if: failure()
      run: |
        echo "❌ Deployment failed!"
        echo "Please check the logs above for more details."