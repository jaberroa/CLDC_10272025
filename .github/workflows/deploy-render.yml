name: Deploy Laravel to Render

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, dom, fileinfo, pgsql, zip
        coverage: none
        
    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ~/.composer/cache
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
          
    - name: Install Composer dependencies
      run: composer install --no-dev --optimize-autoloader --no-interaction
      
    - name: Create deployment package for Render
      run: |
        echo "üöÄ Creando paquete para Render..."
        mkdir -p render-package
        
        echo "üì¶ Copiando archivos de Laravel..."
        cp -r app bootstrap config database public resources routes storage vendor composer.json composer.lock artisan render-package/
        
        echo "‚úÖ Archivos copiados correctamente"
        
        echo "üì¶ Comprimiendo archivo..."
        cd render-package && zip -r ../render-deployment.zip . && cd ..
        
        echo "‚úÖ Paquete ZIP listo"
        unzip -l render-deployment.zip | head -20

    - name: Deploy to Render
      run: |
        echo "üöÄ Desplegando a Render..."
        
        if [ -z "${{ secrets.RENDER_SERVICE_ID }}" ]; then
          echo "‚ùå Error: Falta RENDER_SERVICE_ID"
          exit 1
        fi
        
        if [ -z "${{ secrets.RENDER_API_KEY }}" ]; then
          echo "‚ùå Error: Falta RENDER_API_KEY"
          exit 1
        fi

        curl -X POST \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{"clearCache": "clear"}' \
          "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys"
        
        echo "‚úÖ Render deploy request enviada"

    - name: Deployment Success Notification
      if: success()
      run: |
        echo "‚úÖ Deployment Finalizado Correctamente"
        echo "üåç Ver en producci√≥n: https://cldc.onrender.com"

    - name: Deployment Failure Notification
      if: failure()
      run: |
        echo "‚ùå Deployment a Render Fall√≥"
        echo "Revisar logs arriba üîç"
