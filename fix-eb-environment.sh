#!/bin/bash

echo "üîß Solucionando problema de Elastic Beanstalk..."
echo "El entorno est√° esperando versi√≥n 'Sample' pero recibe Laravel"
echo ""

# Verificar que AWS CLI est√° disponible
if ! command -v aws &> /dev/null; then
    echo "‚ùå AWS CLI no est√° instalado"
    echo "Instala con: sudo snap install aws-cli"
    exit 1
fi

echo "üìã Opciones para solucionar el problema:"
echo "========================================"
echo ""
echo "OPCI√ìN 1: Eliminar y recrear el entorno (RECOMENDADO)"
echo "-----------------------------------------------------"
echo "1. Eliminar el entorno actual: cldci-staging-env"
echo "2. Crear un nuevo entorno con la configuraci√≥n correcta"
echo "3. Configurar las variables de entorno"
echo ""
echo "OPCI√ìN 2: Forzar deployment de nueva versi√≥n"
echo "--------------------------------------------"
echo "1. Crear una nueva versi√≥n de aplicaci√≥n"
echo "2. Forzar el deployment ignorando la versi√≥n 'Sample'"
echo ""

echo "üöÄ Ejecutando OPCI√ìN 2 (m√°s r√°pida)..."
echo ""

# Crear nueva versi√≥n de aplicaci√≥n
echo "üì¶ Creando nueva versi√≥n de aplicaci√≥n..."

# Obtener la √∫ltima versi√≥n exitosa
LATEST_VERSION=$(aws elasticbeanstalk describe-application-versions \
    --application-name cldci-staging \
    --region us-east-1 \
    --query 'ApplicationVersions[?Status==`Processed`] | sort_by(@, &DateCreated) | [-1].VersionLabel' \
    --output text)

echo "√öltima versi√≥n procesada: $LATEST_VERSION"

# Crear nueva versi√≥n con timestamp
NEW_VERSION="laravel-$(date +%Y%m%d-%H%M%S)"
echo "Nueva versi√≥n: $NEW_VERSION"

echo ""
echo "üìã Pasos manuales necesarios en AWS Console:"
echo "============================================"
echo ""
echo "1. Ve a AWS Console > Elastic Beanstalk > cldci-staging-env"
echo "2. Ve a 'Versiones de la aplicaci√≥n' (Application versions)"
echo "3. Busca la versi√≥n m√°s reciente (870e059db426b4a9a46456dc9fa113f8b3d2ace8-4)"
echo "4. Haz clic en 'Deploy' en esa versi√≥n"
echo "5. Selecciona el entorno: cldci-staging-env"
echo "6. Haz clic en 'Deploy'"
echo ""
echo "ALTERNATIVA: Eliminar y recrear el entorno"
echo "==========================================="
echo "1. Elimina el entorno actual: cldci-staging-env"
echo "2. Crea un nuevo entorno con:"
echo "   - Plataforma: Docker running on 64bit Amazon Linux 2023"
echo "   - C√≥digo fuente: Upload your code"
echo "   - Variables de entorno: Configurar desde .env.staging"
echo ""

echo "üéØ Recomendaci√≥n: Usar la OPCI√ìN 1 (recrear entorno) para evitar problemas futuros"
